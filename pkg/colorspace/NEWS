Changes in Version 1.4-0

  o Claus O. Wilke and Claire D. McWhite joined the "colorspace" team,
    adding and enhancing various features: New shiny apps, color
    vision deficiency emulation, ggplot2 palettes, etc. (see below for details).
    
  o New function simulate_cvd() for simulating color vision deficiencies
    with convenience interfaces deutan(), protan(), and tritan().

  o New function hcl_palettes() to query pre-defined HCL-based palettes:
    qualitative, sequential (single-hue), sequential (multi-hue),
    diverging. The corresponding print(), plot(), and summary() methods
    can help to explore the palettes.
    
  o New and more flexible qualitative_hcl() palette function. This is
    similar to the old rainbow_hcl() but allows to use the pre-defined
    palettes and change the parameters more easily.

  o Palette function sequential_hcl() is now substantially more flexible:
    encompasses both single-hue and multi-hue palettes; gained a new
    parameter 'cmax' for non-monotonic chroma paths. Parameters h1, h2,
    c1, c2, l1, l2, p1, p2, cmax allow to easily modify existing palettes
    in just a few HCL parameters.
    
  o Function diverging_hcl() is introduced as a copy of diverge_hcl()
    for a more consistent naming of the *_hcl palettes where * is one of
    the adjectives "qualitative", "sequential", and "diverging". Both
    diverging_hcl() and diverge_hcl() now also gained a 'cmax' argument
    just like sequential_hcl(). Individual parameters h1, h2, c1, l1, l2,
    p1, p2 can also be easily modified.

  o New functions divergingx_hcl()/divergex_hcl() have been added for
    fully fle_x_ible diverging palettes (as opposed to the more restricted
    balanced palettes in diverging_hcl/diverge_hcl). These support parameters
    h1, h2, h3, c1, c2, c3, l1, l2, l3, p1, p2, p3, p4, cmax1, cmax2.

  o Many new predefined palettes that facilitate close approximation of
    almost all palettes from ColorBrewer.org, CARTO, and Viridis.
    
  o New interactive shiny app hcl_color_picker() for exploring HCL colors,
    and manually assembling individual colors or palettes. Douglas C. Wu
    (@wckdouglas) provided the original implementation for the color
    palette feature.

  o New convenience function swatchplot() that facilitates displaying
    color swatches to display and compare collections of color palettes.

  o Added a new function max_chroma() that (approximately) computes
    the maximum chroma possible for a given hue and luminance
    combination in HCL space.

  o Registration of C routines.
  
  o In LAB_to_XYZ conversion, replace decimal approximations with exact
    rational numbers (reported by Glenn Davis). Follows Bruce Lindbloom:
    http://brucelindbloom.com/index.html?LContinuity.html

  o New function whitepoint() that can both query the current whitepoint
    and set it to a different value. By default CIE D65 with XYZ
    coordinates 95.047, 100.000, 108.883 is used. But it is possible
    to set another global whitepoint now, used for all conversions in
    the package (suggested by Glenn Davis).
    
  o Fixed a bug in desaturate() for named colors (such as "gray92")
    where erroneously the RGB() rather than sRGB() model was used
    internally.

  o Added argument desaturate(..., amount = 1) for optional partial
    desaturation.


Changes in Version 1.3-2

  o Fixed error in as_HLS(), which was passing 'ans' rather than
    'color' as the colour to convert (and that was producing not only
    wrong results, but random results because the values in 'ans' were
    not initialized).  Thanks to Thomas Julou for the report.


Changes in Version 1.3-1

  o Fixed erroneous use of "return" rather than "return()" in
    choose_palette()/hclwizard().


Changes in Version 1.3-0

  o In addition to the Tcl/Tk-based GUI for choose_palette() there is now
    a shiny-based GUI. choose_palette() by default still uses the Tcl/Tk
    version while hclwizard() is a new wrapper that by default calls the
    new shiny version.

  o New function specplot() that converts a given palette in hex codes
    to RGB and HCL coordinates and visualizes their spectrum as a line
    plot.

  o hex2RGB() now omits the alpha channel (if any) in the hex colors
    provided.


Changes in Version 1.2-7

  o Extended choose_palette() for sequential palettes with multiple hues:
    Now two palettes are included in the examples that are very close
    to "viridis" and "magma" from matplotlib in Python (also available
    in R via package "viridis")

  o Changed Depends/Imports/Suggests to conform with current R CMD check.


Changes in Version 1.2-6

  o Moved "tcltk" again from Imports to Suggests to facilitate usage of
    colorspace on platforms where tcltk is not available.


Changes in Version 1.2-5

  o Changed Depends/Imports/Suggests to conform with current R CMD check.


Changes in Version 1.2-4

  o Bug fix for choose_palette() when using palette functions with
    optional alpha channels.


Changes in Version 1.2-3

  o Alpha channel is preserved in desaturate for named colors (especially
    "transparent" and NA). (Reported by Simon Potter.)

  o Added alpha argument for all palette functions (see ?rainbow_hcl).
    
  o Small fixups for R CMD check.


Changes in Version 1.2-2

  o Names of colors are preserved in hex() and hex2RGB() now. (Reported
    by Richard Cotton.)


Changes in Version 1.2-1

  o If a new version of the dichromat package (> 1.2-4) with tritan
    support is found, this is interfaced in choose_palette().


Changes in Version 1.2-0

  o New Tcl/Tk-based GUI for choosing different types of palettes:
    qualitative (rainbow_hcl), single-hue sequential (sequential_hcl),
    multi-hue sequential (heat_hcl), and diverging (diverge_hcl). The
    GUI provides a wide collection of pre-stored palettes, easy
    manipulation of the corresponding arguments, illustration through
    a broad range of plot types (maps, heatmaps, variations of bar plots,
    scatter plots, and many more), emulation of desaturation and
    dichromatic vision, loading/saving palettes, etc.    

  o Bug fix in polarLAB_to_LAB conversion.

  o All .Call() calls now with PACKAGE = "colorspace".
  
  o Added some simple tests based on the examples and vignette.


Changes in Version 1.1-1

  o Added desaturate() function for removal of chroma in a given
    vector of colors.

  o Bug fix in HLS_to_RGB conversion for s == 0.


Changes in Version 1.1-0

  o Added "sRGB" colorspace.
    (Existing "RGB" colorspace is linearized "sRGB".)

  o Conversions to and from "HSV" and "HSL" can only occur
    from or to "RGB" or "sRGB" (because both "HSV" and "HSL"
    are relative colorspaces, meaning relative to a particular
    RGB colorspace).
    (Converting to or from "RGB" gives a different result 
     compared to conversion to or from "sRGB".)

  o All 'gamma' parameters in all R-level functions have been deprecated.
    (The "sRGB" colorspace has implicit gamma.)


Changes in Version 1.0-1

  o "Escaping RGBland" paper is now published Computational
    Statistics & Data Analysis as doi:10.1016/j.csda.2008.11.033.
    Citation and references updated accordingly.


Changes in Version 1.0-0

  o new version to accompany the "Escaping RGBland" paper accepted
    for publication in Computational Statistics & Data Analysis, see
    citation("colorspace")
    

Changes in Version 0.97

  o moved color palettes from vcd to colorspace,
    including vignette("hcl-colors")
  
  o added infrastructure for HLS color space

  o new CITATION file
